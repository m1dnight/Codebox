//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CodeBoxModel", "UserSnippet", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeBox.Domain.Concrete.ORM.User), "Snippet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Snippet), true)]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "UserRole", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.User), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Role))]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "SnippetLanguage", "Snippet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Snippet), "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeBox.Domain.Concrete.ORM.Language), true)]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "GroupUser", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Group), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.User))]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "GroupSnippet", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Group), "Snippet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.Snippet))]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "GroupAdminUser", "GroupAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.GroupAdmin), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeBox.Domain.Concrete.ORM.User))]
[assembly: EdmRelationshipAttribute("CodeBoxModel", "GroupAdminGroup", "GroupAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CodeBox.Domain.Concrete.ORM.GroupAdmin), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CodeBox.Domain.Concrete.ORM.Group), true)]

#endregion

namespace CodeBox.Domain.Concrete.ORM
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CodeBoxEntities : ObjectContext
    {
    	#region Constructors
    
    	/// <summary>
    	/// Initializes a new CodeBoxEntities object using the connection string found in the 'CodeBoxEntities' section of the application configuration file.
    	/// </summary>
    	public CodeBoxEntities() : base("name=CodeBoxEntities", "CodeBoxEntities")
    	{
    		this.ContextOptions.LazyLoadingEnabled = true;
    		OnContextCreated();
    	}
    
    	/// <summary>
    	/// Initialize a new CodeBoxEntities object.
    	/// </summary>
    	public CodeBoxEntities(string connectionString) : base(connectionString, "CodeBoxEntities")
    	{
    		this.ContextOptions.LazyLoadingEnabled = true;
    		OnContextCreated();
    	}
    
    	/// <summary>
    	/// Initialize a new CodeBoxEntities object.
    	/// </summary>
    	public CodeBoxEntities(EntityConnection connection) : base(connection, "CodeBoxEntities")
    	{
    		this.ContextOptions.LazyLoadingEnabled = true;
    		OnContextCreated();
    	}
    
    	#endregion
    
    	#region Partial Methods
    
    	partial void OnContextCreated();
    
    	#endregion
    
        #region ObjectSet Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<User> Users
    	{
    		get
    		{
    			if ((_Users == null))
    			{
    				_Users = base.CreateObjectSet<User>("Users");
    			}
    			return _Users;
    		}
    	}
    	private ObjectSet<User> _Users;
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<Snippet> Snippets
    	{
    		get
    		{
    			if ((_Snippets == null))
    			{
    				_Snippets = base.CreateObjectSet<Snippet>("Snippets");
    			}
    			return _Snippets;
    		}
    	}
    	private ObjectSet<Snippet> _Snippets;
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<Language> Languages
    	{
    		get
    		{
    			if ((_Languages == null))
    			{
    				_Languages = base.CreateObjectSet<Language>("Languages");
    			}
    			return _Languages;
    		}
    	}
    	private ObjectSet<Language> _Languages;
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<Role> Roles
    	{
    		get
    		{
    			if ((_Roles == null))
    			{
    				_Roles = base.CreateObjectSet<Role>("Roles");
    			}
    			return _Roles;
    		}
    	}
    	private ObjectSet<Role> _Roles;
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<Group> Groups
    	{
    		get
    		{
    			if ((_Groups == null))
    			{
    				_Groups = base.CreateObjectSet<Group>("Groups");
    			}
    			return _Groups;
    		}
    	}
    	private ObjectSet<Group> _Groups;
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	public ObjectSet<GroupAdmin> GroupAdmins
    	{
    		get
    		{
    			if ((_GroupAdmins == null))
    			{
    				_GroupAdmins = base.CreateObjectSet<GroupAdmin>("GroupAdmins");
    			}
    			return _GroupAdmins;
    		}
    	}
    	private ObjectSet<GroupAdmin> _GroupAdmins;

        #endregion
        #region AddTo Methods
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToUsers(User user)
    	{
    		base.AddObject("Users", user);
    	}
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the Snippets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToSnippets(Snippet snippet)
    	{
    		base.AddObject("Snippets", snippet);
    	}
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToLanguages(Language language)
    	{
    		base.AddObject("Languages", language);
    	}
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToRoles(Role role)
    	{
    		base.AddObject("Roles", role);
    	}
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToGroups(Group group)
    	{
    		base.AddObject("Groups", group);
    	}
    
    	/// <summary>
    	/// Deprecated Method for adding a new object to the GroupAdmins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
    	/// </summary>
    	public void AddToGroupAdmins(GroupAdmin groupAdmin)
    	{
    		base.AddObject("GroupAdmins", groupAdmin);
    	}

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new Group object.
    	/// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
    	public static Group CreateGroup(global::System.Int32 id, global::System.String name)
    	{
    		Group group = new Group();
    		group.Id = id;
    		group.Name = name;
    		return group;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 Id
    	{
    		get
    		{
    			return _Id;
    		}
    		set
    		{
    			if (_Id != value)
    			{
        			OnIdChanging(value);
        			ReportPropertyChanging("Id");
        			_Id = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("Id");
        			OnIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _Id;
    	partial void OnIdChanging(global::System.Int32 value);
    	partial void OnIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Name
    	{
    		get
    		{
    			return _Name;
    		}
    		set
    		{
    			OnNameChanging(value);
    			ReportPropertyChanging("Name");
    			_Name = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Name");
    			OnNameChanged();
    		}
    	}
    	private global::System.String _Name;
    	partial void OnNameChanging(global::System.String value);
    	partial void OnNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Description
    	{
    		get
    		{
    			return _Description;
    		}
    		set
    		{
    			OnDescriptionChanging(value);
    			ReportPropertyChanging("Description");
    			_Description = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Description");
    			OnDescriptionChanged();
    		}
    	}
    	private global::System.String _Description;
    	partial void OnDescriptionChanging(global::System.String value);
    	partial void OnDescriptionChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.Byte[] ImageData
    	{
    		get
    		{
    			return StructuralObject.GetValidValue(_ImageData);
    		}
    		set
    		{
    			OnImageDataChanging(value);
    			ReportPropertyChanging("ImageData");
    			_ImageData = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("ImageData");
    			OnImageDataChanged();
    		}
    	}
    	private global::System.Byte[] _ImageData;
    	partial void OnImageDataChanging(global::System.Byte[] value);
    	partial void OnImageDataChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String ImageMimeType
    	{
    		get
    		{
    			return _ImageMimeType;
    		}
    		set
    		{
    			OnImageMimeTypeChanging(value);
    			ReportPropertyChanging("ImageMimeType");
    			_ImageMimeType = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("ImageMimeType");
    			OnImageMimeTypeChanged();
    		}
    	}
    	private global::System.String _ImageMimeType;
    	partial void OnImageMimeTypeChanging(global::System.String value);
    	partial void OnImageMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupUser", "User")]
    	public EntityCollection<User> Users
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("CodeBoxModel.GroupUser", "User");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("CodeBoxModel.GroupUser", "User", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupSnippet", "Snippet")]
    	public EntityCollection<Snippet> Snippets
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Snippet>("CodeBoxModel.GroupSnippet", "Snippet");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Snippet>("CodeBoxModel.GroupSnippet", "Snippet", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupAdminGroup", "GroupAdmin")]
    	public EntityCollection<GroupAdmin> GroupAdmins
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupAdmin>("CodeBoxModel.GroupAdminGroup", "GroupAdmin");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupAdmin>("CodeBoxModel.GroupAdminGroup", "GroupAdmin", value);
    			}
    		}
    	}

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="GroupAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupAdmin : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new GroupAdmin object.
    	/// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
    	public static GroupAdmin CreateGroupAdmin(global::System.Int32 id, global::System.Int32 groupId)
    	{
    		GroupAdmin groupAdmin = new GroupAdmin();
    		groupAdmin.Id = id;
    		groupAdmin.GroupId = groupId;
    		return groupAdmin;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 Id
    	{
    		get
    		{
    			return _Id;
    		}
    		set
    		{
    			if (_Id != value)
    			{
        			OnIdChanging(value);
        			ReportPropertyChanging("Id");
        			_Id = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("Id");
        			OnIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _Id;
    	partial void OnIdChanging(global::System.Int32 value);
    	partial void OnIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 GroupId
    	{
    		get
    		{
    			return _GroupId;
    		}
    		set
    		{
    			OnGroupIdChanging(value);
    			ReportPropertyChanging("GroupId");
    			_GroupId = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("GroupId");
    			OnGroupIdChanged();
    		}
    	}
    	private global::System.Int32 _GroupId;
    	partial void OnGroupIdChanging(global::System.Int32 value);
    	partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupAdminUser", "User")]
    	public User User
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.GroupAdminUser", "User").Value;
    		}
    		set
    		{
    			((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.GroupAdminUser", "User").Value = value;
    		}
    	}
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[BrowsableAttribute(false)]
    	[DataMemberAttribute()]
    	public EntityReference<User> UserReference
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.GroupAdminUser", "User");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CodeBoxModel.GroupAdminUser", "User", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupAdminGroup", "Group")]
    	public Group Group
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("CodeBoxModel.GroupAdminGroup", "Group").Value;
    		}
    		set
    		{
    			((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("CodeBoxModel.GroupAdminGroup", "Group").Value = value;
    		}
    	}
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[BrowsableAttribute(false)]
    	[DataMemberAttribute()]
    	public EntityReference<Group> GroupReference
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("CodeBoxModel.GroupAdminGroup", "Group");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("CodeBoxModel.GroupAdminGroup", "Group", value);
    			}
    		}
    	}

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new Language object.
    	/// </summary>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
    	public static Language CreateLanguage(global::System.Int32 languageId, global::System.String name)
    	{
    		Language language = new Language();
    		language.LanguageId = languageId;
    		language.Name = name;
    		return language;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 LanguageId
    	{
    		get
    		{
    			return _LanguageId;
    		}
    		set
    		{
    			if (_LanguageId != value)
    			{
        			OnLanguageIdChanging(value);
        			ReportPropertyChanging("LanguageId");
        			_LanguageId = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("LanguageId");
        			OnLanguageIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _LanguageId;
    	partial void OnLanguageIdChanging(global::System.Int32 value);
    	partial void OnLanguageIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Name
    	{
    		get
    		{
    			return _Name;
    		}
    		set
    		{
    			OnNameChanging(value);
    			ReportPropertyChanging("Name");
    			_Name = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Name");
    			OnNameChanged();
    		}
    	}
    	private global::System.String _Name;
    	partial void OnNameChanging(global::System.String value);
    	partial void OnNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Description
    	{
    		get
    		{
    			return _Description;
    		}
    		set
    		{
    			OnDescriptionChanging(value);
    			ReportPropertyChanging("Description");
    			_Description = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Description");
    			OnDescriptionChanged();
    		}
    	}
    	private global::System.String _Description;
    	partial void OnDescriptionChanging(global::System.String value);
    	partial void OnDescriptionChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String InfoUrl
    	{
    		get
    		{
    			return _InfoUrl;
    		}
    		set
    		{
    			OnInfoUrlChanging(value);
    			ReportPropertyChanging("InfoUrl");
    			_InfoUrl = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("InfoUrl");
    			OnInfoUrlChanged();
    		}
    	}
    	private global::System.String _InfoUrl;
    	partial void OnInfoUrlChanging(global::System.String value);
    	partial void OnInfoUrlChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "SnippetLanguage", "Snippet")]
    	public EntityCollection<Snippet> Snippets
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Snippet>("CodeBoxModel.SnippetLanguage", "Snippet");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Snippet>("CodeBoxModel.SnippetLanguage", "Snippet", value);
    			}
    		}
    	}

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new Role object.
    	/// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
    	public static Role CreateRole(global::System.Int32 roleId, global::System.String name)
    	{
    		Role role = new Role();
    		role.RoleId = roleId;
    		role.Name = name;
    		return role;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 RoleId
    	{
    		get
    		{
    			return _RoleId;
    		}
    		set
    		{
    			if (_RoleId != value)
    			{
        			OnRoleIdChanging(value);
        			ReportPropertyChanging("RoleId");
        			_RoleId = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("RoleId");
        			OnRoleIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _RoleId;
    	partial void OnRoleIdChanging(global::System.Int32 value);
    	partial void OnRoleIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Name
    	{
    		get
    		{
    			return _Name;
    		}
    		set
    		{
    			OnNameChanging(value);
    			ReportPropertyChanging("Name");
    			_Name = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Name");
    			OnNameChanged();
    		}
    	}
    	private global::System.String _Name;
    	partial void OnNameChanging(global::System.String value);
    	partial void OnNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Description
    	{
    		get
    		{
    			return _Description;
    		}
    		set
    		{
    			OnDescriptionChanging(value);
    			ReportPropertyChanging("Description");
    			_Description = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Description");
    			OnDescriptionChanged();
    		}
    	}
    	private global::System.String _Description;
    	partial void OnDescriptionChanging(global::System.String value);
    	partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "UserRole", "User")]
    	public EntityCollection<User> Users
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("CodeBoxModel.UserRole", "User");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("CodeBoxModel.UserRole", "User", value);
    			}
    		}
    	}

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="Snippet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Snippet : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new Snippet object.
    	/// </summary>
        /// <param name="snippetId">Initial value of the SnippetId property.</param>
        /// <param name="public">Initial value of the Public property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
    	public static Snippet CreateSnippet(global::System.Int32 snippetId, global::System.Boolean @public, global::System.Int32 userId, global::System.Int32 languageId)
    	{
    		Snippet snippet = new Snippet();
    		snippet.SnippetId = snippetId;
    		snippet.Public = @public;
    		snippet.UserId = userId;
    		snippet.LanguageId = languageId;
    		return snippet;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 SnippetId
    	{
    		get
    		{
    			return _SnippetId;
    		}
    		set
    		{
    			if (_SnippetId != value)
    			{
        			OnSnippetIdChanging(value);
        			ReportPropertyChanging("SnippetId");
        			_SnippetId = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("SnippetId");
        			OnSnippetIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _SnippetId;
    	partial void OnSnippetIdChanging(global::System.Int32 value);
    	partial void OnSnippetIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Name
    	{
    		get
    		{
    			return _Name;
    		}
    		set
    		{
    			OnNameChanging(value);
    			ReportPropertyChanging("Name");
    			_Name = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Name");
    			OnNameChanged();
    		}
    	}
    	private global::System.String _Name;
    	partial void OnNameChanging(global::System.String value);
    	partial void OnNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Description
    	{
    		get
    		{
    			return _Description;
    		}
    		set
    		{
    			OnDescriptionChanging(value);
    			ReportPropertyChanging("Description");
    			_Description = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Description");
    			OnDescriptionChanged();
    		}
    	}
    	private global::System.String _Description;
    	partial void OnDescriptionChanging(global::System.String value);
    	partial void OnDescriptionChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> CreationDate
    	{
    		get
    		{
    			return _CreationDate;
    		}
    		set
    		{
    			OnCreationDateChanging(value);
    			ReportPropertyChanging("CreationDate");
    			_CreationDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("CreationDate");
    			OnCreationDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _CreationDate;
    	partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnCreationDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Code
    	{
    		get
    		{
    			return _Code;
    		}
    		set
    		{
    			OnCodeChanging(value);
    			ReportPropertyChanging("Code");
    			_Code = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Code");
    			OnCodeChanged();
    		}
    	}
    	private global::System.String _Code;
    	partial void OnCodeChanging(global::System.String value);
    	partial void OnCodeChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> ModifiedDate
    	{
    		get
    		{
    			return _ModifiedDate;
    		}
    		set
    		{
    			OnModifiedDateChanging(value);
    			ReportPropertyChanging("ModifiedDate");
    			_ModifiedDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("ModifiedDate");
    			OnModifiedDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _ModifiedDate;
    	partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnModifiedDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Boolean Public
    	{
    		get
    		{
    			return _Public;
    		}
    		set
    		{
    			OnPublicChanging(value);
    			ReportPropertyChanging("Public");
    			_Public = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("Public");
    			OnPublicChanged();
    		}
    	}
    	private global::System.Boolean _Public;
    	partial void OnPublicChanging(global::System.Boolean value);
    	partial void OnPublicChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 UserId
    	{
    		get
    		{
    			return _UserId;
    		}
    		set
    		{
    			OnUserIdChanging(value);
    			ReportPropertyChanging("UserId");
    			_UserId = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("UserId");
    			OnUserIdChanged();
    		}
    	}
    	private global::System.Int32 _UserId;
    	partial void OnUserIdChanging(global::System.Int32 value);
    	partial void OnUserIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 LanguageId
    	{
    		get
    		{
    			return _LanguageId;
    		}
    		set
    		{
    			OnLanguageIdChanging(value);
    			ReportPropertyChanging("LanguageId");
    			_LanguageId = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LanguageId");
    			OnLanguageIdChanged();
    		}
    	}
    	private global::System.Int32 _LanguageId;
    	partial void OnLanguageIdChanging(global::System.Int32 value);
    	partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "UserSnippet", "User")]
    	public User User
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.UserSnippet", "User").Value;
    		}
    		set
    		{
    			((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.UserSnippet", "User").Value = value;
    		}
    	}
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[BrowsableAttribute(false)]
    	[DataMemberAttribute()]
    	public EntityReference<User> UserReference
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CodeBoxModel.UserSnippet", "User");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CodeBoxModel.UserSnippet", "User", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "SnippetLanguage", "Language")]
    	public Language Language
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("CodeBoxModel.SnippetLanguage", "Language").Value;
    		}
    		set
    		{
    			((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("CodeBoxModel.SnippetLanguage", "Language").Value = value;
    		}
    	}
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[BrowsableAttribute(false)]
    	[DataMemberAttribute()]
    	public EntityReference<Language> LanguageReference
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("CodeBoxModel.SnippetLanguage", "Language");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("CodeBoxModel.SnippetLanguage", "Language", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupSnippet", "Group")]
    	public EntityCollection<Group> Groups
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("CodeBoxModel.GroupSnippet", "Group");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("CodeBoxModel.GroupSnippet", "Group", value);
    			}
    		}
    	}

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CodeBoxModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
    	/// <summary>
    	/// Create a new User object.
    	/// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="providerName">Initial value of the ProviderName property.</param>
    	public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String password, global::System.String mail, global::System.DateTime creationDate, global::System.String providerName)
    	{
    		User user = new User();
    		user.UserId = userId;
    		user.Username = username;
    		user.Password = password;
    		user.Mail = mail;
    		user.CreationDate = creationDate;
    		user.ProviderName = providerName;
    		return user;
    	}

        #endregion
        #region Primitive Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Int32 UserId
    	{
    		get
    		{
    			return _UserId;
    		}
    		set
    		{
    			if (_UserId != value)
    			{
        			OnUserIdChanging(value);
        			ReportPropertyChanging("UserId");
        			_UserId = StructuralObject.SetValidValue(value);
        			ReportPropertyChanged("UserId");
        			OnUserIdChanged();
    			}
    		}
    	}
    	private global::System.Int32 _UserId;
    	partial void OnUserIdChanging(global::System.Int32 value);
    	partial void OnUserIdChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Name
    	{
    		get
    		{
    			return _Name;
    		}
    		set
    		{
    			OnNameChanging(value);
    			ReportPropertyChanging("Name");
    			_Name = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Name");
    			OnNameChanged();
    		}
    	}
    	private global::System.String _Name;
    	partial void OnNameChanging(global::System.String value);
    	partial void OnNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Surname
    	{
    		get
    		{
    			return _Surname;
    		}
    		set
    		{
    			OnSurnameChanging(value);
    			ReportPropertyChanging("Surname");
    			_Surname = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Surname");
    			OnSurnameChanged();
    		}
    	}
    	private global::System.String _Surname;
    	partial void OnSurnameChanging(global::System.String value);
    	partial void OnSurnameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Username
    	{
    		get
    		{
    			return _Username;
    		}
    		set
    		{
    			OnUsernameChanging(value);
    			ReportPropertyChanging("Username");
    			_Username = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Username");
    			OnUsernameChanged();
    		}
    	}
    	private global::System.String _Username;
    	partial void OnUsernameChanging(global::System.String value);
    	partial void OnUsernameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Password
    	{
    		get
    		{
    			return _Password;
    		}
    		set
    		{
    			OnPasswordChanging(value);
    			ReportPropertyChanging("Password");
    			_Password = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Password");
    			OnPasswordChanged();
    		}
    	}
    	private global::System.String _Password;
    	partial void OnPasswordChanging(global::System.String value);
    	partial void OnPasswordChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> LastSeen
    	{
    		get
    		{
    			return _LastSeen;
    		}
    		set
    		{
    			OnLastSeenChanging(value);
    			ReportPropertyChanging("LastSeen");
    			_LastSeen = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LastSeen");
    			OnLastSeenChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _LastSeen;
    	partial void OnLastSeenChanging(Nullable<global::System.DateTime> value);
    	partial void OnLastSeenChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String Mail
    	{
    		get
    		{
    			return _Mail;
    		}
    		set
    		{
    			OnMailChanging(value);
    			ReportPropertyChanging("Mail");
    			_Mail = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("Mail");
    			OnMailChanged();
    		}
    	}
    	private global::System.String _Mail;
    	partial void OnMailChanging(global::System.String value);
    	partial void OnMailChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String passwordQuestion
    	{
    		get
    		{
    			return _passwordQuestion;
    		}
    		set
    		{
    			OnpasswordQuestionChanging(value);
    			ReportPropertyChanging("passwordQuestion");
    			_passwordQuestion = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("passwordQuestion");
    			OnpasswordQuestionChanged();
    		}
    	}
    	private global::System.String _passwordQuestion;
    	partial void OnpasswordQuestionChanging(global::System.String value);
    	partial void OnpasswordQuestionChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String Comment
    	{
    		get
    		{
    			return _Comment;
    		}
    		set
    		{
    			OnCommentChanging(value);
    			ReportPropertyChanging("Comment");
    			_Comment = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("Comment");
    			OnCommentChanged();
    		}
    	}
    	private global::System.String _Comment;
    	partial void OnCommentChanging(global::System.String value);
    	partial void OnCommentChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Boolean Approved
    	{
    		get
    		{
    			return _Approved;
    		}
    		set
    		{
    			OnApprovedChanging(value);
    			ReportPropertyChanging("Approved");
    			_Approved = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("Approved");
    			OnApprovedChanged();
    		}
    	}
    	private global::System.Boolean _Approved = true;
    	partial void OnApprovedChanging(global::System.Boolean value);
    	partial void OnApprovedChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.Boolean LockedOut
    	{
    		get
    		{
    			return _LockedOut;
    		}
    		set
    		{
    			OnLockedOutChanging(value);
    			ReportPropertyChanging("LockedOut");
    			_LockedOut = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LockedOut");
    			OnLockedOutChanged();
    		}
    	}
    	private global::System.Boolean _LockedOut = false;
    	partial void OnLockedOutChanging(global::System.Boolean value);
    	partial void OnLockedOutChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.DateTime CreationDate
    	{
    		get
    		{
    			return _CreationDate;
    		}
    		set
    		{
    			OnCreationDateChanging(value);
    			ReportPropertyChanging("CreationDate");
    			_CreationDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("CreationDate");
    			OnCreationDateChanged();
    		}
    	}
    	private global::System.DateTime _CreationDate;
    	partial void OnCreationDateChanging(global::System.DateTime value);
    	partial void OnCreationDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> lastLoginDate
    	{
    		get
    		{
    			return _lastLoginDate;
    		}
    		set
    		{
    			OnlastLoginDateChanging(value);
    			ReportPropertyChanging("lastLoginDate");
    			_lastLoginDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("lastLoginDate");
    			OnlastLoginDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _lastLoginDate;
    	partial void OnlastLoginDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnlastLoginDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> LastPasswordChangeDate
    	{
    		get
    		{
    			return _LastPasswordChangeDate;
    		}
    		set
    		{
    			OnLastPasswordChangeDateChanging(value);
    			ReportPropertyChanging("LastPasswordChangeDate");
    			_LastPasswordChangeDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LastPasswordChangeDate");
    			OnLastPasswordChangeDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _LastPasswordChangeDate;
    	partial void OnLastPasswordChangeDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnLastPasswordChangeDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> LastLockOutDate
    	{
    		get
    		{
    			return _LastLockOutDate;
    		}
    		set
    		{
    			OnLastLockOutDateChanging(value);
    			ReportPropertyChanging("LastLockOutDate");
    			_LastLockOutDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LastLockOutDate");
    			OnLastLockOutDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _LastLockOutDate;
    	partial void OnLastLockOutDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnLastLockOutDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    	[DataMemberAttribute()]
    	public global::System.String ProviderName
    	{
    		get
    		{
    			return _ProviderName;
    		}
    		set
    		{
    			OnProviderNameChanging(value);
    			ReportPropertyChanging("ProviderName");
    			_ProviderName = StructuralObject.SetValidValue(value, false);
    			ReportPropertyChanged("ProviderName");
    			OnProviderNameChanged();
    		}
    	}
    	private global::System.String _ProviderName;
    	partial void OnProviderNameChanging(global::System.String value);
    	partial void OnProviderNameChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public Nullable<global::System.DateTime> LastActivityDate
    	{
    		get
    		{
    			return _LastActivityDate;
    		}
    		set
    		{
    			OnLastActivityDateChanging(value);
    			ReportPropertyChanging("LastActivityDate");
    			_LastActivityDate = StructuralObject.SetValidValue(value);
    			ReportPropertyChanged("LastActivityDate");
    			OnLastActivityDateChanged();
    		}
    	}
    	private Nullable<global::System.DateTime> _LastActivityDate;
    	partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
    	partial void OnLastActivityDateChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.Byte[] ImageData
    	{
    		get
    		{
    			return StructuralObject.GetValidValue(_ImageData);
    		}
    		set
    		{
    			OnImageDataChanging(value);
    			ReportPropertyChanging("ImageData");
    			_ImageData = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("ImageData");
    			OnImageDataChanged();
    		}
    	}
    	private global::System.Byte[] _ImageData;
    	partial void OnImageDataChanging(global::System.Byte[] value);
    	partial void OnImageDataChanged();
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    	[DataMemberAttribute()]
    	public global::System.String ImageMimeType
    	{
    		get
    		{
    			return _ImageMimeType;
    		}
    		set
    		{
    			OnImageMimeTypeChanging(value);
    			ReportPropertyChanging("ImageMimeType");
    			_ImageMimeType = StructuralObject.SetValidValue(value, true);
    			ReportPropertyChanged("ImageMimeType");
    			OnImageMimeTypeChanged();
    		}
    	}
    	private global::System.String _ImageMimeType;
    	partial void OnImageMimeTypeChanging(global::System.String value);
    	partial void OnImageMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "UserSnippet", "Snippet")]
    	public EntityCollection<Snippet> Snippets
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Snippet>("CodeBoxModel.UserSnippet", "Snippet");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Snippet>("CodeBoxModel.UserSnippet", "Snippet", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "UserRole", "Role")]
    	public EntityCollection<Role> Roles
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("CodeBoxModel.UserRole", "Role");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("CodeBoxModel.UserRole", "Role", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupUser", "Group")]
    	public EntityCollection<Group> Groups
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("CodeBoxModel.GroupUser", "Group");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("CodeBoxModel.GroupUser", "Group", value);
    			}
    		}
    	}
    
    	/// <summary>
    	/// No Metadata Documentation available.
    	/// </summary>
    	[XmlIgnoreAttribute()]
    	[SoapIgnoreAttribute()]
    	[DataMemberAttribute()]
    	[EdmRelationshipNavigationPropertyAttribute("CodeBoxModel", "GroupAdminUser", "GroupAdmin")]
    	public EntityCollection<GroupAdmin> GroupAdmins
    	{
    		get
    		{
    			return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupAdmin>("CodeBoxModel.GroupAdminUser", "GroupAdmin");
    		}
    		set
    		{
    			if ((value != null))
    			{
    				((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupAdmin>("CodeBoxModel.GroupAdminUser", "GroupAdmin", value);
    			}
    		}
    	}

        #endregion
    }

    #endregion
    
}
